/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type { V4Quoter, V4QuoterInterface } from "../V4Quoter";

const _abi = [
  {
    type: "function",
    name: "quoteExactInput",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IQuoter.QuoteExactParams",
        components: [
          {
            name: "exactCurrency",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "path",
            type: "tuple[]",
            internalType: "struct PathKey[]",
            components: [
              {
                name: "intermediateCurrency",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
              {
                name: "hookData",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "exactAmount",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasEstimate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "quoteExactInputSingle",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IQuoter.QuoteExactSingleParams",
        components: [
          {
            name: "poolKey",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "exactAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "sqrtPriceLimitX96",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "hookData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasEstimate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "quoteExactOutput",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IQuoter.QuoteExactParams",
        components: [
          {
            name: "exactCurrency",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "path",
            type: "tuple[]",
            internalType: "struct PathKey[]",
            components: [
              {
                name: "intermediateCurrency",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
              {
                name: "hookData",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "exactAmount",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasEstimate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "quoteExactOutputSingle",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IQuoter.QuoteExactSingleParams",
        components: [
          {
            name: "poolKey",
            type: "tuple",
            internalType: "struct PoolKey",
            components: [
              {
                name: "currency0",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "currency1",
                type: "address",
                internalType: "Currency",
              },
              {
                name: "fee",
                type: "uint24",
                internalType: "uint24",
              },
              {
                name: "tickSpacing",
                type: "int24",
                internalType: "int24",
              },
              {
                name: "hooks",
                type: "address",
                internalType: "contract IHooks",
              },
            ],
          },
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "exactAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "sqrtPriceLimitX96",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "hookData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "gasEstimate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
];

export class V4Quoter__factory {
  static readonly abi = _abi;
  static createInterface(): V4QuoterInterface {
    return new utils.Interface(_abi) as V4QuoterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): V4Quoter {
    return new Contract(address, _abi, signerOrProvider) as V4Quoter;
  }
}
